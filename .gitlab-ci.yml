#################################################################
#								#
# Copyright (c) 2021-2024 YottaDB LLC and/or its subsidiaries.	#
# All rights reserved.						#
#								#
#	This source code contains the intellectual property	#
#	of its copyright holder(s), and is made available	#
#	under a license.  If you do not know the terms of	#
#	the license, please stop and do not read further.	#
#								#
#################################################################

stages:
  - build-and-test

image:
  name: yottadb/yottadb:latest-master
  entrypoint: [""]

# this should be two separate steps later on ('build' should produce
# an installable binary package that we can install and test in the
# 'test' stage
build-and-test:
  stage: build-and-test
  script:
    - apt-get update -qq
    - apt-get -y -qq install sudo make cmake gcc systemd pkg-config libicu-dev git
    - mkdir build && cd build
    - cmake ..
    - make
    # The tests use journalctl but systemd in a container does not make
    # too much sense, so we install it and run a standalone journald
    # instance on the background
    - /lib/systemd/systemd-journald &
    - make test ARGS="-V"
    - make install
    - source $(pkg-config --variable=prefix yottadb)/ydb_env_set
    - $ydb_dist/yottadb -run %ydbposixtest

build-and-test-ASAN:
  stage: build-and-test
  script:
    - apt-get update -qq
    - apt-get -y -qq install sudo make cmake gcc systemd pkg-config libicu-dev git
    - mkdir build && cd build
    - cmake -D ENABLE_ASAN=ON ..
    - make
    # The tests use journalctl but systemd in a container does not make
    # too much sense, so we install it and run a standalone journald
    # instance on the background
    - /lib/systemd/systemd-journald &
    - make test ARGS="-V"
    - make install
    - source $(pkg-config --variable=prefix yottadb)/ydb_env_set
    # After installing YDBPosix that was compiled with ASAN, if you want to run %ydbposixtest
    # you need to manually specify LD_PRELOAD to make it work.
    # Otherwise it will issue an error "ASan runtime does not come first in initial library list"
    # Also, we need to suppress LeakSanitizer message otherwise the test will fails
    - LD_PRELOAD=`find /usr/lib -name "libasan.so"` ASAN_OPTIONS="detect_leaks=0" $ydb_dist/yottadb -run %ydbposixtest

commit-verify:
  image: ubuntu:22.04
  stage: build-and-test
  before_script:
    - apt-get update -qq && apt-get install -y -qq git wget gnupg
  script:
    # Copy commit gpg key verify script to build directory and execute
    - wget https://gitlab.com/YottaDB/DB/YDB/-/raw/master/ci/commit_verify.sh
    - chmod +x commit_verify.sh
    - ./commit_verify.sh ./needs_copyright.sh https://gitlab.com/YottaDB/Util/YDBPosix

clang-tidy:
  image:
    name: yottadb/yottadb:latest-master
    entrypoint: [""]
  stage: build-and-test
  interruptible: true
  artifacts:
    paths:
      - build/warnings/
      - ci/
    when: always
    expire_in: 1 month
  script:
    - apt-get update -q
    - apt-get -q install -y --no-install-recommends >/dev/null
        ca-certificates
        sudo
        make
        cmake
        gcc
        clang-14
        clang-tidy-14
        systemd
        pkg-config
        libicu-dev
        git
        wget
    - wget https://gitlab.com/YottaDB/DB/YDB/-/raw/master/ci/sort_warnings.sh -P ci/
    - wget https://gitlab.com/YottaDB/DB/YDB/-/raw/master/ci/create_tidy_warnings.sh -P ci/
    - chmod +x ci/create_tidy_warnings.sh ci/sort_warnings.sh
    # This sed command is for removing path in find command that defined in ci/create_tidy_warnings.sh
    # that we previously downloaded from YDB repository 
    # So we changed from sr_linux, sr_unix, sr_port and sr_$(uname -m) to current directory (.)
    - sed -i s'/sr_linux\/ sr_unix\/ sr_port\/ sr_$(uname -m)/./g' ci/create_tidy_warnings.sh
    # This sed command is for adding line "-clang-diagnostic-unused-command-line-argument," after line
    # "-bugprone-branch-clone," in ci/create_tidy_warnings.sh
    - sed -i '/-bugprone-branch-clone,/a \ \ \ \ -clang-diagnostic-unused-command-line-argument,' ci/create_tidy_warnings.sh
    - ci/build.sh
